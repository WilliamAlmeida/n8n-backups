{
  "active": true,
  "connections": {
    "messageInfo": {
      "main": [
        [
          {
            "node": "baseInfo",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set user account": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get user account": {
      "main": [
        [
          {
            "node": "user cached?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete user account": {
      "main": [
        [
          {
            "node": "get user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reset Memory": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Chat": {
      "main": [
        [
          {
            "node": "chatConfig",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "user cached?": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reset agent": {
      "main": [
        [
          {
            "node": "Get Chat Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save User Data Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory 1": {
      "ai_memory": [
        [
          {
            "node": "Get Chat Memory",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Insert Data User",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Insert Data Bookings",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat Memory": {
      "main": [
        [
          {
            "node": "chat empty?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chat empty?": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Insert Data User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config to Find All Bookings": {
      "main": [
        [
          {
            "node": "wk bring bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wk bring bookings": {
      "main": [
        [
          {
            "node": "Insert Data Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Data User": {
      "main": [
        [
          {
            "node": "Config to Find All Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chatConfig": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scheduling Tool": {
      "ai_tool": [
        []
      ]
    },
    "baseInfo": {
      "main": [
        [
          {
            "node": "delete instance config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch user": {
      "main": [
        [
          {
            "node": "user found?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get first user": {
      "main": [
        [
          {
            "node": "Merge 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "user found?": {
      "main": [
        [
          {
            "node": "get first user",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "insert user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert user": {
      "main": [
        [
          {
            "node": "user registred?",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "user registred?": {
      "main": [
        [
          {
            "node": "Merge 2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge 2": {
      "main": [
        [
          {
            "node": "set user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "userAccount": {
      "main": [
        [
          {
            "node": "reset agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "wk response whatsapp",
            "type": "main",
            "index": 0
          },
          {
            "node": "Response to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Sign Msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sign Msg": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "delete instance config": {
      "main": [
        [
          {
            "node": "get instance config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has instance config?": {
      "main": [
        [
          {
            "node": "instanceConfig",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch instance config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get instance config": {
      "main": [
        [
          {
            "node": "load instance config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set instance config": {
      "main": [
        [
          {
            "node": "instanceConfig",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "load instance config": {
      "main": [
        [
          {
            "node": "has instance config?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch instance config": {
      "main": [
        [
          {
            "node": "set instance config",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "instance not found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "instanceConfig": {
      "main": [
        [
          {
            "node": "delete prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Data Bookings": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Specialists Tool3": {
      "ai_tool": [
        []
      ]
    },
    "Exams Tool2": {
      "ai_tool": [
        []
      ]
    },
    "Health Plan Tool2": {
      "ai_tool": [
        []
      ]
    },
    "Exam Details Tool2": {
      "ai_tool": [
        []
      ]
    },
    "Health Plan Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Methods Payment Tool2": {
      "ai_tool": [
        []
      ]
    },
    "Methods Payment Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Appt Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Cancel Appt Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Find Existing Appt Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reschedule Appt Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get instance config1": {
      "main": [
        [
          {
            "node": "load instance prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete prompts": {
      "main": [
        [
          {
            "node": "get instance config1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch instance prompts": {
      "main": [
        [
          {
            "node": "set instance prompts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "instancePrompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "load instance prompts": {
      "main": [
        [
          {
            "node": "has instance prompts?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set instance prompts": {
      "main": [
        [
          {
            "node": "instancePrompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has instance prompts?": {
      "main": [
        [
          {
            "node": "instancePrompts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch instance prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "instancePrompts": {
      "main": [
        [
          {
            "node": "delete user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "WebhookTest": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pacient Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Pacient Find Tool": {
      "ai_tool": [
        []
      ]
    },
    "Pacient Register New Tool": {
      "ai_tool": [
        []
      ]
    },
    "Agent Information": {
      "ai_tool": [
        []
      ]
    },
    "specialist_consults": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "exams": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "exam_details": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "event_slot_lookup": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-15T18:19:39.691Z",
  "id": "ds3jAJzOq9bxFmE1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI 4 Clinica",
  "nodes": [
    {
      "parameters": {
        "content": "## Gera a Resposta\nObs.: Seleciona a Base de Dados a ser usada de acordo com a Empresa de maneira Dinâmica e a usa para responder a solicitação",
        "height": 364,
        "width": 794
      },
      "id": "f7ebd1b8-6f22-43fe-8d7b-c51a8b49622e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4960,
        1280
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "K7oBqF1vnvw165RG"
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "id": "7140f0a0-f4d8-42a7-806b-3a78754f3030",
      "name": "wk response whatsapp",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        6160,
        1320
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.body ?? $json }}",
        "options": {}
      },
      "id": "42efc5bc-85fc-47b2-9e77-b82583b7bb2b",
      "name": "messageInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=user_account_{{ $('messageInfo').first().json.remoteJid.split('@')[0] }}",
        "value": "={{ $json.data.toJsonString() ?? {} }}",
        "expire": true,
        "ttl": 120
      },
      "id": "4d31fa4a-aaad-4b90-a029-c3202e27e448",
      "name": "set user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4000,
        1560
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "data",
        "key": "=user_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "keyType": "string",
        "options": {}
      },
      "id": "c38cce3e-1edb-4e17-92d7-af14679d5bd7",
      "name": "get user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3340,
        1380
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=user_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}"
      },
      "id": "7d833f79-a8df-4c90-aa3e-e5c2f3cb6217",
      "name": "delete user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3180,
        1380
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.data ?? $json ?? {} }}",
        "options": {}
      },
      "id": "78719e6e-04fd-4f99-937f-e5bde1c4cd1d",
      "name": "userAccount",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4000,
        1360
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n    \"evo_api\": \"https://apiwp.wmst.com.br\",\n    \"instance\": \"ibox_cli_23\",\n    \"remoteJid\": \"5512982184879@s.whatsapp.net\",\n    \"pushName\": \"W.M. Soluções Tecnologicas\",\n    \"fromMe\": false,\n    \"unique_id\": \"william_5512982184879\",\n    \"debounce_time\": 5,\n    \"conversation\": \"{{ $json.chatInput.replaceAll('\\n', '\\\\n') }}\",\n    \"client_token\": \"4|93netMrGJ7Bto6QllQy8z3LpTxwXtTAJV1jjxCO5343aba96\"\n  }",
        "options": {}
      },
      "id": "0cc9491d-d4e1-47e3-a012-6ff1b02e8e9b",
      "name": "chatConfig",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        1240
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}_clinica",
        "sessionTTL": 300,
        "contextWindowLength": 30
      },
      "id": "0dece69a-7574-4cc0-9cd4-64a01585661c",
      "name": "Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        5120,
        1520
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use esta ferramenta para limpar a memória do bate-papo após ter finalizado um agendamento, reagendamento ou cancelamento.",
        "operation": "delete",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}_clinica"
      },
      "id": "76246e11-4cdd-4141-965d-fde672b23f70",
      "name": "Reset Memory",
      "type": "n8n-nodes-base.redisTool",
      "typeVersion": 1,
      "position": [
        5600,
        1500
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "public": true,
        "options": {
          "responseMode": "lastNode"
        }
      },
      "id": "372e405f-57ff-422d-bfb9-bb2797c49a28",
      "name": "Chat",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        240,
        1240
      ],
      "webhookId": "e3d20b54-2754-4118-a536-febb3389a454"
    },
    {
      "parameters": {},
      "id": "a2182a31-5d55-4811-a476-23a5eca970ed",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        400,
        1440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "098d3cb2-41df-4d2a-8640-ef5506938e1d",
              "name": "output",
              "value": "=*{{ $workflow.name }}*:\n{{ $('AI Agent').item.json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "58f6d211-0ccc-40df-80f9-089086cd570a",
      "name": "Sign Msg",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5800,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.data }}",
              "rightValue": 0,
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "3ccca82f-6473-4681-9ff1-ceb45dc0a4b4",
      "name": "user cached?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3540,
        1380
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}_clinica"
      },
      "id": "54fdb571-4c52-40ac-aa0c-c66070580bdf",
      "name": "reset agent",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4800,
        1540
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "name": "save_user_data_tool",
        "description": "Use this tool to store fields such as name, email, address, and date of birth (YYYY-MM-DD) in the database. \n\nThe stored values are permanent and cannot be changed.\n\nNever answer that data was saved.",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "JZY3GPC55leuxyHn",
          "cachedResultName": "TOOL Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "supabase"
            },
            {
              "name": "action",
              "stringValue": "update user"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            },
            {
              "name": "user_id",
              "stringValue": "={{ $('userAccount').item.json.id ?? '' }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"key\": {\n      \"type\": \"string\",\n      \"description\": \"full_name, full_address or birthday\"\n    },\n    \"value\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"key\",\n    \"value\"\n  ]\n}"
      },
      "id": "51186f15-8c40-498c-aefd-6ea9a48b3123",
      "name": "Save User Data Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5540,
        1760
      ],
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}_clinica",
        "sessionTTL": 600,
        "contextWindowLength": 7
      },
      "id": "e222fb5f-926e-4325-b5c5-d5a3b8feee8b",
      "name": "Chat Memory 1",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        5600,
        900
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "groupMessages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        4960,
        1080
      ],
      "id": "58f49f4c-be64-493e-9135-af67cda099f4",
      "name": "Get Chat Memory"
    },
    {
      "parameters": {
        "mode": "insert",
        "insertMode": "override",
        "messages": {
          "messageValues": [
            {
              "type": "ai",
              "message": "=User {{ $('userAccount').item.json.id ? 'is' : 'is not yet' }} registered, their name is \"{{ $('userAccount').first().json.full_name ?? '' }}\", email is \"{{ $('userAccount').first().json.email ?? '' }}\", contact phone number is \"{{ $('userAccount').first().json.phone ?? $('messageInfo').first().json.remoteJid.split('@')[0] }}\", and current address is \"{{ $('userAccount').first().json.full_address ?? '' }}\"",
              "hideFromUI": true
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        5460,
        1100
      ],
      "id": "ecf1f01d-2048-4da2-9009-7fb9b0234fab",
      "name": "Insert Data User"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9914c630-b523-42ae-a3a0-b224b821f6ca",
              "leftValue": "={{ $json.messagesCount }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5280,
        1040
      ],
      "id": "6794285c-66d7-4c14-bb15-a0b4e5d9d0d8",
      "name": "chat empty?"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "19e9b408-9bdb-4535-b265-1f714a0dde0d",
              "name": "action",
              "value": "list bookings",
              "type": "string"
            },
            {
              "id": "d6788f61-2c2f-42c1-a263-62d052127dc0",
              "name": "remoteJid",
              "value": "={{ $('userAccount').item.json.phone.toString().split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "4b5c318d-4909-4140-8465-7bb6bf8f2116",
              "name": "query",
              "value": "={\n  \"email\": \"\",\n  \"event_id\": \"\",\n  \"status\": \"all\"\n}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "e0ab1a04-c81a-44ca-84a5-5cae09cd9d80",
      "name": "Config to Find All Bookings",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5780,
        1100
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "QTrKQkY4jxrACTpy",
          "cachedResultName": "COMP Schedule"
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "id": "417aefb5-fc99-4f3e-afda-f8d48ac3aec4",
      "name": "wk bring bookings",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        5940,
        1100
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "messages": {
          "messageValues": [
            {
              "type": "ai",
              "message": "={{ $json.response && $json.response.length ? `User has this bookings: ${$json.response}\n` : 'User does not have any booking at moment' }}",
              "hideFromUI": true
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        6100,
        1100
      ],
      "id": "80d5c8ad-4885-4de9-a586-1decd4613059",
      "name": "Insert Data Bookings"
    },
    {
      "parameters": {
        "name": "scheduling_tool",
        "description": "=Call this tool to handle all requests related to appointment management.\n\nAppointments, Rescheduling, Cancellation, Check Appointment Availability, Check User Appointments.\n\nCancellation and Rescheduling also includes the reason provided by the user, otherwise leave it empty.",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "JZY3GPC55leuxyHn",
          "cachedResultName": "TOOL Clinica"
        },
        "responsePropertyName": "output",
        "fields": {
          "values": [
            {
              "name": "agent",
              "stringValue": "calendar"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            },
            {
              "name": "userAccount",
              "type": "objectValue",
              "objectValue": "={{ $('userAccount').first().json }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n\"type\": \"object\",\n\"properties\": {\n\t\"query\": {\n\t\t\"type\": \"string\"\n\t\t},\n\t\"reason\": {\n\t\t\"type\": \"string\",\n\t\t\"description\": \"reason for cancellation or rescheduling\"\n\t\t}\n\t}\n}"
      },
      "id": "7b833efb-0bfd-4b0f-840d-290669af7bb4",
      "name": "Scheduling Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5780,
        2740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c5e68ae0-e5c0-4770-91f9-3d9e67965ef8",
              "name": "url_api",
              "value": "https://agendaclinic.com/api/v1",
              "type": "string"
            },
            {
              "id": "dcb3ef37-7992-4f5c-8e60-31d9184dce47",
              "name": "bearer_token",
              "value": "=Bearer {{ $json.client_token ?? '4|93netMrGJ7Bto6QllQy8z3LpTxwXtTAJV1jjxCO5343aba96' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "be317669-395b-410e-ac3a-ae5470740f5c",
      "name": "baseInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        780,
        1380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3dc387d1-961d-459e-ac7b-a2662290570e",
              "name": "data",
              "value": "={{ $json.data.first() }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "8ad15b18-b398-469f-9681-3dbeee76ccfc",
      "name": "get first user",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3540,
        1600
      ]
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.url_api }}/pacient",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('messageInfo').item.json.remoteJid.split('@')[0].slice(2) }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "e28da1fa-9183-47b3-8f99-e977139294b2",
      "name": "fetch user",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3180,
        1640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').item.json.url_api }}/pacients",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('messageInfo').first().json.remoteJid.split('@')[0].slice(2) }}"
            },
            {
              "name": "origin",
              "value": "whatsapp"
            },
            {
              "name": "phone_is_whatsapp",
              "value": "={{ true }}"
            },
            {
              "name": "phone_verified_at",
              "value": "={{ $now.toUTC() }}"
            },
            {
              "name": "full_name",
              "value": "={{ $('messageInfo').item.json.pushName }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "64c2d75c-5248-424e-baaa-7fbfd2a1f53d",
      "name": "insert user",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3540,
        1760
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "nmUmytqX7rLnklTQ",
          "name": "AI Clinic Token"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d94d8b68-f7be-4c70-9965-d947f68cdc7c",
              "leftValue": "={{ $json.status == 'success' && $json.data.isNotEmpty() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3340,
        1640
      ],
      "id": "c5e04892-a993-4e93-b5ab-e3fb051b9284",
      "name": "user found?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d94d8b68-f7be-4c70-9965-d947f68cdc7c",
              "leftValue": "={{ $json.status == 'success' && $json.data.hasField('id') }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3880,
        1740
      ],
      "id": "2c6a6fe7-3134-4ba6-8ce8-d46534bc1081",
      "name": "user registred?"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3780,
        1560
      ],
      "id": "3701f096-1a8d-4361-9628-0f07199a9ee4",
      "name": "Merge 2"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "6d4f63cd-58da-492b-ab55-aa84e4b6377b",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6000,
        1320
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messageInfo').first().json.conversation }}",
        "options": {
          "systemMessage": "=Você é um assistente da Clinica ADM.\n\n# Regras de Atendimento:\n1. Somente faça apenas uma pergunta por vez.\n\n2. Se retornado mais de um paciente na Pacient Tool, informe somente um deles para confirmação.\n\n3. Nunca envie textões. Mantenha as mensagens curtas e diretas.\n3.1. Nunca envie uma lista de forma enumerada, no lugar use hifen `-`.\n3.2. *Nunca informe o Event ID* do Médico ou Exame para o usuário.\n3.3. Informe somente horários disponiveis retornados pela *get_availability* tool.\n\n6. Caso o usuário tente cancelar uma consulta, marque se ele não deseja remarcá-la para outra data; caso contrário, prossiga com o cancelamento.\n\n7. Sempre retorne os horários disponíveis no seguinte formato:\n**{data}**: {hour1}, {hour2}, {hour3}\n\ne.g.:\n**01/04/2025**: 09:00, 10:00, 11:00, 12:00, 13:00\nCaso contrário, sempre retorne os horários disponíveis em uma única linha, com os horários separados por vírgulas, conforme mostrado acima.\n\n8. Ao exibir agendamentos, use este formato:\n\ne.g.:\n📅 **{title} - {professional}**\nStatus: **{status}** ✅\nAgendado para **{start}** até **{end}**\nLocalização: **{location}**\nCódigo: **{id}**\n\n# Contexto:\nNosso endereço: Rua Murilo de Oliveira, 252, Índia, das Neves do Leste - RO, 35855-267.\nIdioma: pt_BR\nTom: Amigável, educado, prestativo, eficiente, acolhedor e humanizado. Procure criar uma interação que pareça natural, empática e compreensiva.\n\nPara sua referência, use a data e hora atuais (America/São_Paulo): {{ $now.setLocale(\"pt-BR\").weekdayLong }}, {{ $now.format(\"dd/MM/yyyy HH:mm:ss\") }}\n\n#### Tools:\n\n##### event_slot_lookup:\n- Antes de usar a tool valide o *event_id* usando a tool *specialist_consults* ou *exams*.\n- Utilize o *event_id* como parâmetro para consultar os horários disponíveis.\n- Retornado *Event not Found*, valide o *event_id* novamente.",
          "returnIntermediateSteps": true
        }
      },
      "id": "27ce7d17-3081-4018-96d8-f06974820cf5",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        5220,
        1360
      ],
      "retryOnFail": false,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "content": "## Tenta retornar os dados do Usuário",
        "height": 649,
        "width": 999,
        "color": 5
      },
      "id": "5c0dbf7e-f98a-4f34-a7f3-2449f63c7e25",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3140,
        1280
      ]
    },
    {
      "parameters": {
        "content": "## Retorna as configurações da Instância",
        "height": 643,
        "width": 757,
        "color": 4
      },
      "id": "a42e8703-a160-4e7b-9093-d12491293005",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        940,
        1280
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=instance_config_{{ $('messageInfo').first().json.instance }}"
      },
      "id": "b584c94b-3bcc-4e07-9f80-d0af0abe7eb0",
      "name": "delete instance config",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1000,
        1380
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.instance_config && $json.instance_config.hasField('id') }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "15e5b562-1ffc-4299-96f1-089eb812cb23",
      "name": "has instance config?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1260,
        1400
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "=instance_config",
        "key": "=instance_config_{{ $('messageInfo').first().json.instance }}",
        "keyType": "string",
        "options": {}
      },
      "id": "e000568a-d763-49e0-a683-0cbc8ab1ecf7",
      "name": "get instance config",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1000,
        1580
      ],
      "alwaysOutputData": false,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.instance_config ?? $json.data }}",
        "options": {}
      },
      "id": "7e67c6c3-8058-4ac7-857d-31a0fd3146fe",
      "name": "instanceConfig",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1540,
        1380
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=instance_config_{{ $('messageInfo').first().json.instance }}",
        "value": "={{ $json.status == 'success' ? $json.data.toJsonString() : {}.toJsonString() }}",
        "keyType": "string",
        "expire": true,
        "ttl": 600
      },
      "id": "cec1eccc-7116-49a5-b436-455df0b35b2c",
      "name": "set instance config",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1540,
        1560
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c664cddb-67f9-44b8-9342-ed6d3e2373ec",
              "name": "instance_config",
              "value": "={{ $json.instance_config }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "cc0c4352-69b0-4757-9c1a-df813e6d9645",
      "name": "load instance config",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1160,
        1580
      ]
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.url_api }}/tenant",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1340,
        1580
      ],
      "id": "f319fc47-7d1d-4510-9ca9-600012fa402b",
      "name": "fetch instance config",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1460,
        1760
      ],
      "id": "9ab5e30e-414c-4cf9-95eb-0424955c33a8",
      "name": "instance not found"
    },
    {
      "parameters": {
        "name": "list_specialists_tool",
        "description": "=Esta ferramenta permite acessar informações detalhadas sobre os médicos cadastrados na clínica. É possível realizar buscas pelo nome, CRM ou pela especialidade do profissional, retornando dados como o nome completo, ID do médico, especialidades e outros detalhes relevantes. Essa funcionalidade facilita a identificação do médico mais adequado às necessidades do usuário, permitindo uma navegação mais prática e eficiente.",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "specialists"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            },
            {
              "name": "hidden_fields",
              "type": "arrayValue",
              "arrayValue": "={{ ['event_id'] }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"crm\": {\n      \"type\": \"number\",\n      \"description\": \"crm of medical (optional)\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of medical (optional)\"\n    },\n    \"specialist\": {\n      \"type\": \"string\",\n      \"description\": \"specialist of medical (optional)\"\n    }\n  }\n}"
      },
      "id": "61c9f808-fda6-4214-84b2-58558f21640c",
      "name": "Specialists Tool3",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5000,
        2740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "name": "list_exams_tool",
        "description": "Esta ferramenta fornece uma lista de todos os exames disponíveis na clínica, incluindo nome e ID do exame. É útil para identificar rapidamente as opções de exames que podemos oferecer, permitindo que o usuário escolha um exame pelo nome para obter mais detalhes",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "exams"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            },
            {
              "name": "hidden_fields",
              "type": "arrayValue",
              "arrayValue": "={{ ['event_id'] }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of exam (optional)\"\n    }\n  }\n}"
      },
      "id": "603864c4-5563-4d6f-bfa2-411ac572fb32",
      "name": "Exams Tool2",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5140,
        2740
      ],
      "disabled": true,
      "notes": "Use this tool to obtain and verify basic information about exams as name and exam id provided by the clinic to use in another actions and tools.\n\n---\n\nCall this tool once to return all exams provided and get/verify basic information about exams.\n\n## Workflow:\n1. Use the tool.\n2. Returns list with name, exam ID to use in other actions and tools."
    },
    {
      "parameters": {
        "name": "list_health_plans_tool",
        "description": "Call this tool to get information about available health plans and insurance options.",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "health plans"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of health plan (optional)\"\n    }\n  }\n}"
      },
      "id": "41abc50a-1d2f-43fd-acb5-ad56a17a9ed1",
      "name": "Health Plan Tool2",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5620,
        2740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Use esta ferramenta para obter informações sobre planos de saúde e opções de seguro disponíveis.",
        "url": "https://agendaclinic.com/api/v1/health-plans",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "response_format",
              "valueProvider": "fieldValue",
              "value": "IA"
            },
            {
              "name": "title",
              "valueProvider": "modelOptional"
            },
            {
              "name": "all_if_empty",
              "valueProvider": "fieldValue",
              "value": "={{ true }}"
            }
          ]
        },
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "title",
              "description": "name of health plan or empty for all health plans",
              "type": "string"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "data"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        5180,
        1920
      ],
      "id": "349ab654-b918-49b3-9866-dc1ae4bfa118",
      "name": "Health Plan Tool",
      "disabled": true
    },
    {
      "parameters": {
        "name": "details_any_exam_tool",
        "description": "Use esta ferramenta para obter detalhes específicos sobre um exame utilizando o ID do exame. O ID pode ser obtido a partir da lista de exames. Isso inclui informações como preço, duração, jejum necessário, material coletado, entre outros. O usuário pode solicitar detalhes de um exame pelo nome, e eu buscarei o ID correspondente antes de obter as informações detalhadas",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "exam details"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"exam_id\": {\n      \"type\": \"number\",\n      \"description\": \"exam's id\"\n    }\n  }\n}"
      },
      "id": "07a7323c-23cf-438f-8704-f9d1bf7b626f",
      "name": "Exam Details Tool2",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5300,
        2740
      ],
      "disabled": true,
      "notes": "Call this tool to get all (calendar id, price, category, duration, jejum, collected_material, lab_partner, age_limit, notes, discount_convenio) details about a specific exam using the exam ID.\n\n## Required inputs:\n- Exam ID (number, required).\n\n## Workflow:\n1. Use the exam ID to retrieve the exam details.\n2. Return all information for the specified exam."
    },
    {
      "parameters": {
        "name": "list_payment_methods_tool",
        "description": "Call this tool to get information about payment methods.",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "payments"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of method payment (optional)\"\n    }\n  }\n}"
      },
      "id": "59c1766b-b546-4141-86fd-de0bfe1925ff",
      "name": "Methods Payment Tool2",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5460,
        2740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Use esta ferramenta para obter métodos de pagamento aceitos e não aceitos.",
        "url": "https://agendaclinic.com/api/v1/payment-methods",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "response_format",
              "valueProvider": "fieldValue",
              "value": "IA"
            },
            {
              "name": "title",
              "valueProvider": "fieldValue",
              "value": "{title}"
            },
            {
              "name": "all_if_empty",
              "valueProvider": "fieldValue",
              "value": "={{ true }}"
            }
          ]
        },
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "title",
              "description": "name of method payment. null to all",
              "type": "string"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "data"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        5020,
        1920
      ],
      "id": "d0dbbe0e-eb45-49fb-bcdc-3dca67abb1b0",
      "name": "Methods Payment Tool",
      "disabled": true
    },
    {
      "parameters": {
        "name": "schedule_appt_tool",
        "description": "=Use esta ferramenta para agendar uma consulta ou exame.\n\n## Fluxo de trabalho:\n1. Pergunte se o agendamento é para o usuário ou outra pessoa.\n1.2 Se for agendamento para terceiro, verifique se o paciente já registrado com a tool \"pacient_tool\".\n1.3 Se for para o próprio usuário, use as informações que você possui dele e pergunte as que faltarem.\n2. Confirme as informações antes de finalizar a reserva.\n3. Se o agendamento falhar, registre o problema e notifique o usuário.\n4. Notifique o usuário sobre o ID da reserva.",
        "workflowId": {
          "__rl": true,
          "value": "QTrKQkY4jxrACTpy",
          "mode": "list",
          "cachedResultName": "COMP AIClinic"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "schedule booking"
            },
            {
              "name": "query.pacient_id_me",
              "type": "numberValue",
              "numberValue": "={{ $('userAccount').item.json.id }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"from_me\": {\n      \"type\": \"boolean\",\n      \"description\": \"if booking is to use or another person\"\n    },\n    \"pacient_id\": {\n      \"type\": \"string\",\n      \"description\": \"pacient_id returned from Pacient Tool if from_me was true\"\n    },\n    \"event_id\": {\n      \"type\": \"string\",\n      \"description\": \"event_id from specialist or exam.\"\n    },\n    \"start\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time of the start of the booking in format (YYYY-MM-DDTHH:mm:ss)\"\n    },\n    \"attendee\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"cellphone\": {\n          \"type\": \"string\",\n          \"description\": \"12982184877\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"email\",\n        \"cellphone\"\n      ]\n    },\n    \"bookingFieldsResponses\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"description\": \"optional\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"optional\"\n        },\n        \"method_payment\": {\n          \"type\": \"string\",\n          \"description\": \"optional\"\n        },\n        \"name_plan\": {\n          \"type\": \"string\",\n          \"description\": \"optional\"\n        }\n      }\n    }\n  },\n  \"required\": [\n    \"from_me\",\n    \"pacient_id\",\n    \"start\",\n    \"attendee\",\n    \"event_id\",\n    \"bookingFieldsResponses\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5700,
        1920
      ],
      "id": "cb137b12-947e-432c-b64d-d71de2cf8cef",
      "name": "Schedule Appt Tool",
      "disabled": true
    },
    {
      "parameters": {
        "name": "cancel_appt_tool",
        "description": "=Use esta ferramenta para cancelar um agendamento usando um ID de reserva.\n\n## Fluxo de trabalho:\n1. Verifique o ID de reserva antes de prosseguir.\n2. Confirme com o usuário antes de cancelar.\n3. Cancele o compromisso e notifique o usuário.",
        "workflowId": {
          "__rl": true,
          "value": "QTrKQkY4jxrACTpy",
          "mode": "list",
          "cachedResultName": "COMP AIClinic"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "cancel booking"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\":\n    {\n        \"booking_id\":\n        {\n            \"type\": \"string\",\n            \"description\": \"Booking ID of the booking\"\n        },\n        \"cancellation_reason\":\n        {\n            \"type\": \"string\",\n            \"description\": \"Reason for cancellation\"\n        }\n    },\n    \"required\":\n    [\n        \"booking_id\",\n        \"cancellation_reason\"\n    ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5860,
        1920
      ],
      "id": "c2231b90-e115-4efb-8a85-2597214bd1bc",
      "name": "Cancel Appt Tool",
      "disabled": true
    },
    {
      "parameters": {
        "name": "find_existing_appt_tool",
        "description": "=Use esta ferramenta para encontrar reservas existentes usando o endereço de e-mail do usuário.\n\n## Fluxo de trabalho:\n1. Pesquise reservas que correspondam ao e-mail fornecido.\n2. Retorne reservas correspondentes ou notifique se não forem encontradas.",
        "workflowId": {
          "__rl": true,
          "value": "QTrKQkY4jxrACTpy",
          "mode": "list",
          "cachedResultName": "COMP AIClinic"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "list bookings"
            },
            {
              "name": "remoteJid",
              "stringValue": "={{ $('userAccount').item.json.phone }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\":\n    {\n        \"attendeeEmail\":\n        {\n            \"type\": \"string\",\n            \"description\": \"Email address of the user\"\n        },\n        \"event_id\":\n        {\n            \"type\": \"string\",\n            \"description\": \"Event ID to filter bookings\"\n        },\n        \"status\":\n        {\n            \"type\": \"string\",\n            \"description\": \"Status of the booking (e.g., upcoming, past, cancelled)\",\n            \"default\": \"all\"\n        }\n    },\n    \"required\":\n    [\n        \"email\"\n    ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5540,
        1920
      ],
      "id": "93b22bc7-5428-413f-9a2e-3c5b9b09fb6d",
      "name": "Find Existing Appt Tool",
      "disabled": true
    },
    {
      "parameters": {
        "name": "reschedule_appt_tool",
        "description": "=Use esta ferramenta para reagendar um agendamento usando um ID de reserva.\n\n## Fluxo de trabalho:\n1. Verifique o ID de reserva antes de prosseguir.\n2. Confirme com o usuário antes de reagendar.\n3. Reagende o compromisso e notifique o usuário.",
        "workflowId": {
          "__rl": true,
          "value": "QTrKQkY4jxrACTpy",
          "mode": "list",
          "cachedResultName": "COMP AIClinic"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "reschedule booking"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\":\n    {\n        \"booking_id\":\n        {\n            \"type\": \"string\",\n            \"description\": \"the id of the booking\"\n        },\n        \"start\":\n        {\n            \"type\": \"string\",\n            \"description\": \"date and time of the start of the booking\"\n        },\n        \"rescheduling_reason\":\n        {\n            \"type\": \"string\",\n            \"description\": \"rescheduling reason\"\n        }\n    },\n    \"required\":\n    [\n        \"booking_id\",\n        \"start\",\n        \"reschedulingReason\"\n    ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        6020,
        1920
      ],
      "id": "bd9dc77b-64b7-4e29-a3c4-e5c352b31d5f",
      "name": "Reschedule Appt Tool",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Retorna os prompts da Instância",
        "height": 643,
        "width": 757,
        "color": 2
      },
      "id": "77937441-f9a0-4bac-8d69-ea235eaa0a71",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1740,
        1280
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "=instance_prompts",
        "key": "=instance_prompts_{{ $('messageInfo').first().json.instance }}",
        "keyType": "string",
        "options": {}
      },
      "id": "b4513884-283b-4006-9f3f-a6f98bed2ca4",
      "name": "get instance config1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1800,
        1580
      ],
      "alwaysOutputData": false,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=instance_prompts_{{ $('messageInfo').first().json.instance }}"
      },
      "id": "3080d2ab-98ff-4ede-8911-8fd8fc532a5c",
      "name": "delete prompts",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1800,
        1380
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.url_api }}/prompts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2140,
        1580
      ],
      "id": "de6f1f48-bb26-4282-a761-49d09ead1132",
      "name": "fetch instance prompts",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c664cddb-67f9-44b8-9342-ed6d3e2373ec",
              "name": "instance_prompts",
              "value": "={{ $json.instance_prompts }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "fc5492c4-ff73-4b0a-a88e-ceb8bbc97770",
      "name": "load instance prompts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1960,
        1580
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=instance_prompts_{{ $('messageInfo').first().json.instance }}",
        "value": "={{ $json.status == 'success' ? $json.data.toJsonString() : {}.toJsonString() }}",
        "keyType": "string",
        "expire": true,
        "ttl": 600
      },
      "id": "fa973be2-18eb-4a78-ae8b-9d51994eecf0",
      "name": "set instance prompts",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2340,
        1560
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "40c39acd-7376-4680-94bf-729f86a4c231",
              "name": "prompts",
              "value": "={{ $json.instance_prompts ?? $json.data }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "39cd7ac7-cb78-43c8-9edd-cf5f82cdce3c",
      "name": "instancePrompts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2340,
        1380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.instance_prompts }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e7a8db94-8241-47a8-ad9e-7984c07388b7",
      "name": "has instance prompts?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2060,
        1400
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "=Você é um assistente útil da [{company.name}]\n\n###### Instruções:\n- Nunca envie uma lista de forma enumerada, no lugar use hifen `-`.\n- **Nunca informe o Event ID** do Médico ou Exame para o usuário.\n- Caso o usuário tente cancelar uma consulta, marque se ele não deseja remarcá-la para outra data; caso contrário, prossiga com o cancelamento.\n- Sempre retorne os horários disponíveis no seguinte formato:\n\n**{data}**: {hour1}, {hour2}, {hour3}\n\nPor exemplo:\n**01/04/2025**: 09:00, 10:00, 11:00, 12:00, 13:00\nCaso contrário, sempre retorne os horários disponíveis em uma única linha, com os horários separados por vírgulas, conforme mostrado acima.\n\n- Ao fornecer compromissos, use este formato:\n\nPor exemplo:\n📅 **{title} - {professional}**\nStatus: **{status}** ✅\nAgendado para **{start}** até **{end}**\nLocalização: **{location}**\nCódigo: **{id}**\n\n###### Tool Calls:\n- Quando o usuário menciona seu nome, o sistema chamará a ferramenta *save_user_data_tool* para atualizar seus detalhes no banco de dados.\n\n###### Contexto:\nNosso endereço: [{company.full_address}].\nIdioma: en\nTom: Amigável, educado, prestativo, eficiente, acolhedor e humanizado. Procure criar uma interação que pareça natural, empática e compreensiva.",
        "options": {}
      },
      "id": "0349e48d-f13c-428f-9375-3381b69d5164",
      "name": "prompt_original",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4400,
        800
      ],
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4980,
        1480
      ],
      "id": "7d735b0d-7e56-4569-be1c-cc92e8b781e2",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "Jv19EsZcsXzDgjjj",
          "name": "Litellm OpenAI"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "629ff4c1-b60b-4755-bec3-34309dcdf46c",
              "name": "response",
              "value": "={{ $json.output }}\n\n*estatistica*\n{{ $('Edit Fields').item.json.intermediateSteps.length ? $('Basic LLM Chain').item.json.text : 'Nenhuma' }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6160,
        1520
      ],
      "id": "96ee1b5d-9c82-43c5-a390-9f954e6db18b",
      "name": "Response to Webhook",
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "a3b015c7-b143-47a9-bdb0-36332e651f9f",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        400,
        1640
      ],
      "id": "302606e7-3ece-42d5-9ef0-003b96e08f73",
      "name": "WebhookTest",
      "webhookId": "a3b015c7-b143-47a9-bdb0-36332e651f9f",
      "disabled": true
    },
    {
      "parameters": {
        "name": "schedule_appt_tool",
        "description": "=Use esta ferramenta para agendar uma consulta ou exame.\n\n## Fluxo de trabalho:\n1. Pergunte se o agendamento é para o usuário ou outra pessoa.\n2. Confirme as informações antes de finalizar a reserva.\n3. Se o agendamento falhar, registre o problema e notifique o usuário.\n4. Notifique o usuário sobre o ID da reserva.",
        "workflowId": {
          "__rl": true,
          "value": "QTrKQkY4jxrACTpy",
          "mode": "list",
          "cachedResultName": "COMP AIClinic"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "schedule booking"
            },
            {
              "name": "query.pacient_id",
              "type": "numberValue",
              "numberValue": "={{ $('userAccount').item.json.id }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"fromMe\": {\n      \"type\": \"boolean\",\n      \"description\": \"if booking is to use or another person\"\n    },\n    \"event_id\": {\n      \"type\": \"string\",\n      \"description\": \"event_id from specialist or exam.\"\n    },\n    \"start\": {\n      \"type\": \"string\",\n      \"description\": \"Date and time of the start of the booking in format (YYYY-MM-DDTHH:mm:ss)\"\n    },\n    \"attendee\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"cellphone\": {\n          \"type\": \"string\",\n          \"description\": \"12982184877\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"email\",\n        \"cellphone\"\n      ]\n    },\n    \"bookingFieldsResponses\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"description\": \"optional\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"optional\"\n        },\n        \"method_payment\": {\n          \"type\": \"string\",\n          \"description\": \"optional\"\n        },\n        \"name_plan\": {\n          \"type\": \"string\",\n          \"description\": \"optional\"\n        }\n      }\n    }\n  },\n  \"required\": [\n    \"start\",\n    \"attendee\",\n    \"event_id\",\n    \"bookingFieldsResponses\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        6020,
        1760
      ],
      "id": "4939e107-6f74-49c8-96d2-92071f7a4105",
      "name": "Pacient Tool",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "=Use esta ferramenta para encontrar um paciente cadastrado na clinica, quando o usuário querer registrar um agendamento em nome de terceiro.\n\nEssa funcionalidade facilita a identificação do paciente que será usado no agendamento em nome de terceiro.\n\n**Entrada**\n- Nome, sobrenome e último Nome (Nome Completo)\n- E-mail\n- Telefone\n\n**Retorno**\n- pacient_id do paciente usado no Agendamento\n- Nome completo\n- E-mail\n- Outros detalhes relevantes.",
        "url": "https://agendaclinic.com/api/v1/pacient",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "response_format",
              "valueProvider": "fieldValue",
              "value": "IA"
            },
            {
              "name": "full_name"
            },
            {
              "name": "email",
              "valueProvider": "modelOptional"
            },
            {
              "name": "phone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "all_if_empty",
              "valueProvider": "fieldValue",
              "value": "={{ true }}"
            }
          ]
        },
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "full_name",
              "description": "full name of pacient. e.g. William Luiz de Almeida",
              "type": "string"
            },
            {
              "name": "phone",
              "description": "phone to contact. e.g. 12982184877 (ddd + number)",
              "type": "string"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "data"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        6600,
        1760
      ],
      "id": "2eaf4a6f-a0dd-4116-b5cf-2cd0e4b1a523",
      "name": "Pacient Find Tool",
      "notesInFlow": false,
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "=Use esta ferramenta para registrar um novo paciente na clinica quando o usuário querer registrar um agendamento em nome de terceiro e não tiver sido encontrado o registro  pela Pacient Tool.\n\nEssa funcionalidade facilita o cadastro do paciente que será usado no agendamento em nome de terceiro.\n\n**Entrada**\n- Nome, sobrenome e último Nome (Nome Completo)\n- E-mail\n- Telefone\n\n**Retorno**\n- pacient_id do paciente usado no Agendamento\n- Nome completo\n- E-mail\n- Outros detalhes relevantes.",
        "method": "POST",
        "url": "https://agendaclinic.com/api/v1/pacients",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "full_name"
            },
            {
              "name": "email",
              "valueProvider": "modelOptional"
            },
            {
              "name": "phone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "all_if_empty",
              "valueProvider": "fieldValue",
              "value": "={{ true }}"
            }
          ]
        },
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "full_name",
              "description": "full name of pacient. e.g. William Luiz de Almeida",
              "type": "string"
            },
            {
              "name": "phone",
              "description": "phone to contact. e.g. 12982184877 (ddd + number)",
              "type": "string"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "data"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        6600,
        1920
      ],
      "id": "8e9c4c4f-9a30-4495-a6cb-d65b0f847c18",
      "name": "Pacient Register New Tool",
      "notesInFlow": false,
      "disabled": true
    },
    {
      "parameters": {
        "name": "agent_information",
        "description": "=Use this agent to retrieve the necessary information to answer user questions and to collect data required for performing actions using other tools.\n\n## Available Tools\n\n### 📄 Health_Plan_Tool  \n**Description:** Retrieves available health insurance plans and related details.  \n**Inputs:**  \n- `title`: Name of the health plan (leave empty to list all plans).  \n**Outputs:**  \n- List of available health plans with detailed information and options.\n\n### 💳 Methods_Payment_Tool  \n**Description:** Provides information on accepted and unaccepted payment methods.  \n**Inputs:**  \n- `title`: Payment method name (null to retrieve all).  \n**Outputs:**  \n- Status and details of each payment method (accepted or not).\n\n### 👨‍⚕️ Specialists_Tool  \n**Description:** Returns detailed information about doctors registered at the clinic.  \n**Inputs:**  \n- `crm`: Doctor’s registration number.  \n- `title`: Doctor’s name (null to fetch all).  \n- `procedure`: Doctor’s specialty (e.g., pediatrician).  \n**Outputs:**  \n- Full profile of each doctor, including name, specialties, consultation price and `event_id`.\n\n### 🔬 Exam_Details_Tool  \n**Description:** Retrieves specific information about an exam using its event ID.  \n**Inputs:**  \n- `exam_id`: Unique identifier of the exam.  \n**Outputs:**  \n- Detailed exam info including price, duration, fasting requirement, collected materials, etc.\n\n### 🧪 Exams_Tool  \n**Description:** Lists all exams offered by the clinic.  \n**Inputs:**  \n- `title`: Name of the exam.  \n**Outputs:**  \n- List of available exams, including name and `event_id`.\n\nThese tools enable fast and practical access to information about health plans, payment methods, doctors, and exams.",
        "workflowId": {
          "__rl": true,
          "value": "UcK1fI4zOm0eB4D9",
          "mode": "list",
          "cachedResultName": "Clinic - Agent Info"
        },
        "fields": {
          "values": [
            {
              "name": "bearer_token",
              "stringValue": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "jsonSchemaExample": ""
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        6420,
        1920
      ],
      "id": "d1bfefd7-4aaf-437b-b8de-e48df29f78c4",
      "name": "Agent Information",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "=Esta ferramenta fornece uma lista de todos os consultas médicos disponíveis na clínica, incluindo nome e crm do especialista, valor e event_id da consulta. É útil para identificar rapidamente as opções de consulta e médicos que podemos oferecer.",
        "url": "https://agendaclinic.com/api/v1/specialists",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "response_format",
              "valueProvider": "fieldValue",
              "value": "IA"
            },
            {
              "name": "crm",
              "valueProvider": "modelOptional"
            },
            {
              "name": "title",
              "valueProvider": "fieldValue",
              "value": "{title}"
            },
            {
              "name": "procedure",
              "valueProvider": "fieldValue",
              "value": "{procedure}"
            },
            {
              "name": "all_if_empty",
              "valueProvider": "fieldValue",
              "value": "={{ true }}"
            }
          ]
        },
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "title",
              "description": "name of medical not your specialist. empty to list",
              "type": "string"
            },
            {
              "name": "procedure",
              "description": "specialist of medical. e.g.: pediatra. empty to list",
              "type": "string"
            }
          ]
        },
        "optimizeResponse": true,
        "responseType": "text"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        5020,
        1760
      ],
      "id": "c5a6cbc6-8626-410a-84fe-008c425d0d69",
      "name": "specialist_consults",
      "notesInFlow": false
    },
    {
      "parameters": {
        "toolDescription": "=Esta ferramenta fornece uma lista de todos os exames disponíveis na clínica, incluindo nome e event_id do exame. É útil para identificar rapidamente as opções de exames que podemos oferecer, permitindo que o usuário escolha um exame pelo nome para obter mais detalhes.",
        "url": "https://agendaclinic.com/api/v1/exams",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "response_format",
              "valueProvider": "fieldValue",
              "value": "IA"
            },
            {
              "name": "title",
              "valueProvider": "fieldValue",
              "value": "{title}"
            },
            {
              "name": "all_if_empty",
              "valueProvider": "fieldValue",
              "value": "={{ true }}"
            }
          ]
        },
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "title",
              "description": "name of exam. null to all",
              "type": "string"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "data"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        5180,
        1760
      ],
      "id": "4d80baa6-f1f3-4a8f-8786-07c4f94e9167",
      "name": "exams",
      "notesInFlow": false
    },
    {
      "parameters": {
        "toolDescription": "=Use esta ferramenta para obter detalhes específicos sobre um exame utilizando o event_id do exame. O event_id pode ser obtido a partir da lista de exames. Isso inclui informações como preço, duração, jejum necessário, material coletado, entre outros. O usuário pode solicitar detalhes de um exame pelo nome, e eu buscarei o event_id correspondente antes de obter as informações detalhadas.",
        "url": "https://agendaclinic.com/api/v1/exams/{exam_id}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "response_format",
              "valueProvider": "fieldValue",
              "value": "IA"
            }
          ]
        },
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo').item.json.bearer_token }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "exam_id",
              "description": "exam's id",
              "type": "number"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "data"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        5340,
        1760
      ],
      "id": "1b00c118-82fc-4859-84d6-86c8b4ded0eb",
      "name": "exam_details",
      "notesInFlow": false,
      "disabled": true
    },
    {
      "parameters": {
        "name": "event_slot_lookup",
        "description": "=Use sempre esta ferramenta para obter a disponibilidade de horários de uma consulta médica ou exame.",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "QTrKQkY4jxrACTpy",
          "cachedResultName": "COMP Schedule"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "availability"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"strict\": true,\n  \"properties\": {\n    \"event_id\": {\n      \"type\": \"number\",\n      \"description\": \"event_id from tool specialist_consult or exam for which you want to check availability.\"\n    },\n    \"startTime\": {\n      \"type\": \"string\",\n      \"description\": \"Start date and time of the appointment in format (YYYY-MM-DDTHH:mm:ss). If not provided, the default will be 24 hours.\"\n    },\n    \"endTime\": {\n      \"type\": \"string\",\n      \"description\": \"End date and time of the appointment. If not provided, the default will be 24 hours after 'startTime'. If provided, the end time must be within 3 days of the 'startTime'.\"\n    }\n  },\n  \"required\": [\n    \"event_id\",\n    \"startTime\",\n    \"endTime\"\n  ]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5340,
        1920
      ],
      "id": "93efa8ef-e8a5-4a9f-a2eb-1d87755d4f12",
      "name": "event_slot_lookup"
    },
    {
      "parameters": {
        "amount": 0.5
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6440,
        1020
      ],
      "id": "733cb2f4-65b8-49bf-8e05-c4f8707847d9",
      "name": "Wait",
      "webhookId": "05e066fc-a535-4eef-9557-0fcc8edf2249"
    },
    {
      "parameters": {
        "description": "=Use a ferramenta para pensar sobre algo. Ela não obterá novas informações nem alterará o banco de dados, apenas anexará o pensamento ao registro. Use-a quando for necessário raciocínio complexo ou alguma memória cache."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        5820,
        1560
      ],
      "id": "cdbdbc7f-ab4a-46e2-8223-5a1698e4e265",
      "name": "Think",
      "disabled": true
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "evo_api": "https://apiwp.wmst.com.br",
          "instance": "ibox_cli_23",
          "remoteJid": "5512982184879@s.whatsapp.net",
          "pushName": "W.M. Soluções Tecnologicas",
          "fromMe": false,
          "unique_id": "ibox_cli_23_5512982184879",
          "evo_api_key": "3246B56693A1-4BAD-A92A-183844A4CFBB",
          "conversation": "oi cli"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T14:34:01.317Z",
      "updatedAt": "2024-09-27T14:34:01.317Z",
      "id": "ZoTSEGR97fzorfDz",
      "name": "AI"
    },
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    },
    {
      "createdAt": "2024-10-08T13:33:46.636Z",
      "updatedAt": "2024-10-08T13:33:46.636Z",
      "id": "aSNW5tPyOIOEr9rS",
      "name": "Agent"
    },
    {
      "createdAt": "2024-12-18T13:55:11.434Z",
      "updatedAt": "2024-12-18T13:55:11.434Z",
      "id": "02kkCHve480aFjG4",
      "name": "Clinic"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-04-17T15:39:06.658Z",
  "versionId": "41c733e6-d9d4-498e-9274-a7ed4986d59b"
}