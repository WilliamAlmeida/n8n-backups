{
  "active": true,
  "connections": {
    "baseInfo": {
      "main": [
        [
          {
            "node": "from me?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Transcription Image": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Transcription Audio": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Base64": {
      "main": [
        []
      ]
    },
    "Convert To Audio": {
      "main": [
        [
          {
            "node": "Groq Analyze Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Image": {
      "main": [
        [
          {
            "node": "Groq Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Text 2": {
      "main": [
        [
          {
            "node": "Structure Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structure Message": {
      "main": [
        [
          {
            "node": "Clean Msgs 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "from me?": {
      "main": [
        [
          {
            "node": "set block AI",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get block AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get block AI": {
      "main": [
        [
          {
            "node": "AI blocked?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI blocked?": {
      "main": [
        [],
        [
          {
            "node": "ignore numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Type": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "set config",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Groq Analyze Audio": {
      "main": [
        [
          {
            "node": "Format Transcription Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Analyze Image": {
      "main": [
        [
          {
            "node": "Groq Normalize Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Normalize Image": {
      "main": [
        [
          {
            "node": "Format Transcription Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ignore numbers": {
      "main": [
        [
          {
            "node": "allow numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "allow numbers": {
      "main": [
        [],
        [
          {
            "node": "Message Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Media Type": {
      "main": [
        [
          {
            "node": "Convert To Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert To Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete instance config": {
      "main": [
        [
          {
            "node": "get instance config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has instance config?": {
      "main": [
        [
          {
            "node": "instanceConfig",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch instance config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get instance config": {
      "main": [
        [
          {
            "node": "load instance config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "instanceConfig": {
      "main": [
        []
      ]
    },
    "set instance config": {
      "main": [
        [
          {
            "node": "instanceConfig",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "load instance config": {
      "main": [
        [
          {
            "node": "has instance config?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "baseInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch instance config": {
      "main": [
        [
          {
            "node": "set instance config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Primeiro mensagem?": {
      "main": [
        [
          {
            "node": "Aguarda Sec para Processar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Msgs 1": {
      "main": [
        [
          {
            "node": "Primeiro mensagem?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Msgs 2": {
      "main": [
        [
          {
            "node": "Join Msgs",
            "type": "main",
            "index": 0
          },
          {
            "node": "Clean Msgs  2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Msg": {
      "main": [
        [
          {
            "node": "Get Msgs 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aguarda Sec para Processar": {
      "main": [
        [
          {
            "node": "Get Msgs 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Msgs 1": {
      "main": [
        [
          {
            "node": "Save Msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Join Msgs": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "chatInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chatInfo": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "merge": {
      "main": [
        [
          {
            "node": "limit characters hited?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "limit characters hited?": {
      "main": [
        [
          {
            "node": "Type Response 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "wk agent actived",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Type Response 1": {
      "main": [
        [
          {
            "node": "Send Message 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set config": {
      "main": [
        [
          {
            "node": "Media Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-23T12:50:45.990Z",
  "id": "1wPm5qQR0N4GHRem",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI 2 Capture Msg Clinica",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5f5addd6-12c4-4bbd-bce7-6448e90cb9d0",
              "name": "evo_api",
              "value": "={{ $('Webhook').first().json.body.server_url ?? 'http://evo.wsl.local' }}",
              "type": "string"
            },
            {
              "id": "d8fa0cad-0b2f-4e61-8d05-5d29829d0156",
              "name": "instance",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "e390ea49-44e4-4aa2-8f1f-9044fd4b27f8",
              "name": "remoteJid",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "375453f5-c979-48d0-9a77-f2e837c80da5",
              "name": "pushName",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "c1179eef-b150-4d05-89c1-3b85660ec6bd",
              "name": "fromMe",
              "value": "={{ $json.body.data.key.fromMe }}",
              "type": "boolean"
            },
            {
              "id": "2ca406cb-0c5a-4e69-a005-ba35e81128da",
              "name": "messageType",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "f9189c75-e206-4c9d-a538-fadff9121f07",
              "name": "unique_id",
              "value": "={{ $json.body.instance }}_{{ $json.body.data.key.remoteJid.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "c6cd82b0-7666-4391-911e-87e0f132ba7b",
              "name": "evo_api_key",
              "value": "={{ $json.body.apikey ?? '' }}",
              "type": "string"
            },
            {
              "id": "a9b6f39e-42cf-4b1f-998e-4f9a577b3679",
              "name": "output.content",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "57e939cc-5163-4f45-8f2b-6e0827c2dd7a",
              "name": "client_token",
              "value": "={{ $json.body.clientToken ?? '4|93netMrGJ7Bto6QllQy8z3LpTxwXtTAJV1jjxCO5343aba96' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "aa0cc6fc-024d-40a1-9796-43986d614d55",
      "name": "baseInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -16440,
        1300
      ],
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "content": "## Captura Mensagem\n### Nota: Se for áudios/imagens transcreve para formato de texto\n*Obs.: No final monta estrutura JSON que será usada no restante do fluxo*",
        "height": 739,
        "width": 1630,
        "color": 5
      },
      "id": "dd766ca6-53f8-44e2-b9a9-915f1b3cf196",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -15040,
        1120
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\nlet response = '';\n\nconst conversation = data.message.conversation;\nconst quotedMessage = data.contextInfo?.quotedMessage?.extendedTextMessage?.text;\nconst editedMessage = data.message.editedMessage?.message?.protocolMessage?.editedMessage?.extendedTextMessage?.text;\n\nif (quotedMessage) {\n  response = `Menção: ${quotedMessage}, Mensagem: ${conversation}`;\n} else if (editedMessage) {\n  response = `${editedMessage}*`;\n} else {\n  response = conversation;\n}\n\nreturn { output: response };"
      },
      "id": "208b271d-02aa-4cfd-8a2d-bc5be7b7cb36",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -13940,
        1240
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\n\n// data.messageTimestamp\n\nlet milis = $now.toMillis();\n\nreturn {\n  id: data.key.id ?? null,\n  origin: data.messageType,\n  output: $json.output,\n  timestamp: data.messageTimestamp ?? null,\n  datetime: data?.messageTimestamp ? DateTime.fromSeconds(data.messageTimestamp).toFormat('yyyy-MM-dd H:m:s') : null,\n  timestamp_local: milis,\n  datetime_local: DateTime.fromSeconds(milis).toFormat('yyyy-MM-dd H:m:s')\n};"
      },
      "id": "5d4f7dee-66d3-47ea-a5b0-6c453aa5f4b1",
      "name": "Structure Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -13540,
        1460
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\nconst caption = data.message?.imageMessage?.caption;\nconst content = $input.item.json.content;\nlet response = '';\n\n// Verifica se o conteúdo existe\nif (content) {\n  response = caption\n    ? `${content} Legenda: ${caption}`\n    : `Transcrição: ${content}`;\n} else {\n  response = 'Erro: json.content ausente para imagem com legenda';\n}\n\nreturn { output: response };"
      },
      "id": "05b80c1b-9eca-4394-bbcc-435f9e07c877",
      "name": "Format Transcription Image",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -13940,
        1620
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const content = $input.item.json.text;\nlet response = '';\n\n// Verifica se o conteúdo existe\nif (content) {\n  response = `Transcrição: ${content}`;\n} else {\n  response = 'Erro: json.content ausente para aúdio';\n}\n\nreturn { output: response };"
      },
      "id": "d439fac8-569f-4642-9c91-6e86c5d90119",
      "name": "Format Transcription Audio",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -13940,
        1460
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').first().json.evo_api }}/chat/getBase64FromMediaMessage/{{ $('baseInfo').first().json.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('baseInfo').first().json.evo_api_key }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"message\": {\"key\": {\"id\": \"{{ $('Webhook').item.json.body.data.key.id }}\"}},\n  \"convertToMp4\": false\n}",
        "options": {}
      },
      "id": "77b69fa3-e6ce-4ac9-af5e-2990016593ed",
      "name": "Get Base64",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -14980,
        1720
      ],
      "alwaysOutputData": false,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "transcricao.ogg",
          "mimeType": "audio/ogg"
        }
      },
      "id": "66986a8c-05e2-4d67-a009-fbe61e8427b8",
      "name": "Convert To Audio",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -14600,
        1460
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "imagem.jpeg",
          "mimeType": "image/jpeg"
        }
      },
      "id": "5fd7b5b5-bdb6-4e70-97c9-d8c233c4cdc0",
      "name": "Convert To Image",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -14600,
        1620
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d6e859-8379-4a34-8daf-b34c6a450a09",
              "name": "output",
              "value": "={{ $json.output.replaceAll('\\n', '\\\\n').replaceAll('**', '*') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5b3d89fe-5144-4756-824d-c027f5e189e2",
      "name": "Fix Text 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -13700,
        1460
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "431dcbe2-fb2e-4864-803d-d968ddcb255f",
              "leftValue": "={{ $json.fromMe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d776c299-dc62-4acf-a4d5-d45b9796b626",
      "name": "from me?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -16260,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=block_{{ $json.unique_id }}",
        "value": "1",
        "expire": true,
        "ttl": 30
      },
      "id": "b5643c83-613e-4205-9ae1-de15f7baafbd",
      "name": "set block AI",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -16040,
        1220
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "=block_{{ $json.unique_id }}",
        "keyType": "string",
        "options": {}
      },
      "id": "de9c906d-4e56-447f-b54e-65fb17ec48d5",
      "name": "get block AI",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -16040,
        1380
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "af15b823-b848-4adf-be57-5ce022c321a8",
              "leftValue": "={{ $json.block }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ef8ecec2-a9fe-40b6-a535-e8cc85b05210",
      "name": "AI blocked?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -15860,
        1280
      ]
    },
    {
      "parameters": {
        "content": "## Gerencia o Bloqueio da AI\n*Se enviado pelo dono do whatsapp, ele bloqueia por N segundos*",
        "height": 407.0742534707905,
        "width": 586.0266008245178,
        "color": 3
      },
      "id": "7ab11a8c-9676-48ee-bd04-cb5bc3ab1a1e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -16280,
        1120
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "conversation"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "86e7e773-8586-458f-a1fb-2890f2030230",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "msg"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "7f108034-a1be-4e90-b42e-e4f8a719e311",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "editedMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "msg edited"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "256e7cf8-be54-4c41-ba80-2d9eb0a07563",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "da03e413-3422-419c-af1a-71ff87c307e2",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "0f03419b-a174-4cac-bff6-d55f7ff60460",
      "name": "Message Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -14940,
        1260
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/audio/transcriptions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "groqApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "model",
              "value": "whisper-large-v3"
            },
            {
              "name": "temperature",
              "value": "0.5"
            },
            {
              "name": "response_format",
              "value": "json"
            },
            {
              "name": "language",
              "value": "pt"
            }
          ]
        },
        "options": {}
      },
      "id": "4d9352e4-ecce-4e6c-8b48-b2bbaa9634ac",
      "name": "Groq Analyze Audio",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -14280,
        1460
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "groqApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"Descreva todo o conteúdo da imagem, sem Acentos e sem hífens\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"data:image/jpeg;base64,{{ $('Convert To Image').item.binary.data.data }}\"\n          }\n        }\n      ]\n    }\n  ],\n  \"model\": \"llama-3.2-90b-vision-preview\",\n  \"temperature\": 1,\n  \"max_tokens\": 1024,\n  \"top_p\": 1,\n  \"stream\": false,\n  \"stop\": null\n}\n",
        "options": {}
      },
      "id": "b4e6abaa-7f6d-465c-8da6-c03d277e9fdd",
      "name": "Groq Analyze Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -14380,
        1620
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      },
      "notes": "llama-3.2-11b-vision-preview\nllava-v1.5-7b-4096-preview\nllama-3.2-90b-vision-preview"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8ab20a1-b06d-4840-b71f-4c53eb2b005c",
              "name": "content",
              "value": "={{ $json.choices[0].message.content ?? '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4dcc08b0-f480-4f8f-880c-a748995e3a5f",
      "name": "Groq Normalize Image",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -14160,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "479ad9fd-bb31-42db-a957-658e9e1d556f",
              "leftValue": "={{ $json.ignored_id.split(',').indexOf($('baseInfo').item.json.remoteJid.split('@')[0]) }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7c151b35-598e-4188-b950-4fa472391844",
      "name": "allow numbers",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -15300,
        1300
      ],
      "notesInFlow": true,
      "notes": "invertido temporariamente"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd480120-b53b-4c64-9cbf-d5bfd813e50c",
              "name": "ignored_id",
              "value": "=5512982184879",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "61fd2c2c-0616-4219-ab8d-d32a5bbf5e30",
      "name": "ignore numbers",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -15540,
        1300
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.mediaType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bba31f6b-7dc3-4dac-a090-c38d70065d40",
                    "leftValue": "={{ $json.mediaType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "do nothing"
        }
      },
      "id": "8dde6b86-4693-4c2a-b514-59a344b8a90e",
      "name": "Media Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -14820,
        1560
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "pt"
        }
      },
      "id": "f2e39abd-390f-4fc6-ad09-0356e1721ebd",
      "name": "Analyze Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [
        -13700,
        1160
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini-2024-07-18",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI-2024-07-18"
        },
        "text": "Descreva todo o conteúdo da imagem, sem Acentos e sem hífens",
        "inputType": "base64",
        "options": {}
      },
      "id": "11969def-41de-4e39-a0e4-cd49dc5993ec",
      "name": "Analyze Image",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        -13540,
        1160
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Gerencia o Bloqueio de Números Ignorados\n*Se enviado pelo por um whatsapp na lista, ele não repassa a mensagem*",
        "height": 262.3204306824423,
        "width": 535.8424799077808
      },
      "id": "ce802cb6-e30c-4b01-b886-229aad4cbcad",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -15640,
        1200
      ]
    },
    {
      "parameters": {
        "content": "## Retorna as configurações da Instância",
        "height": 483.3176121655175,
        "width": 756.5270031117756,
        "color": 4
      },
      "id": "775663db-d7e3-47a7-8b1b-e57ce1241d5d",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -15040,
        480
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=instance_config_{{ $('baseInfo').first().json.instance }}"
      },
      "id": "b1e9ed70-aff5-4b77-a3ef-df0edb8381f7",
      "name": "delete instance config",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -14980,
        580
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.instance_config.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f024da80-a7fb-48cc-a6eb-b3d612b8ac02",
      "name": "has instance config?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -14720,
        580
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "=instance_config",
        "key": "=instance_config_{{ $('baseInfo').first().json.instance }}",
        "keyType": "string",
        "options": {}
      },
      "id": "82efcade-dc20-42cd-988d-d4930d2f7a4f",
      "name": "get instance config",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -14980,
        780
      ],
      "alwaysOutputData": false,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.instance_config ?? $json.data }}",
        "options": {}
      },
      "id": "8ff3f080-967a-4faa-a73a-8aab8475ee71",
      "name": "instanceConfig",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -14440,
        560
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=instance_config_{{ $('baseInfo').first().json.instance }}",
        "value": "={{ $json.status == 'success' ? $json.data.toJsonString() : {}.toJsonString() }}",
        "keyType": "string",
        "expire": true,
        "ttl": 600
      },
      "id": "6135cbb3-3eac-4771-91b0-e2ab1aed4690",
      "name": "set instance config",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -14460,
        780
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c664cddb-67f9-44b8-9342-ed6d3e2373ec",
              "name": "instance_config",
              "value": "={{ $json.instance_config }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "76bd0e8e-7459-4e4b-b846-8adb836223bf",
      "name": "load instance config",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -14820,
        780
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "85b1053a-9b80-48c1-91b6-6650abd744b6",
        "options": {}
      },
      "id": "c0c41ae0-3a00-4de2-9767-eb09f9769be2",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -16620,
        1300
      ],
      "webhookId": "85b1053a-9b80-48c1-91b6-6650abd744b6"
    },
    {
      "parameters": {
        "url": "https://agendaclinic.com/api/v1/tenant",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('baseInfo').item.json.client_token }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -14640,
        780
      ],
      "id": "3fa719f1-51c7-4f80-80c4-5654217063f1",
      "name": "fetch instance config"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f80ab0b6-a90e-42b0-b68f-b4fd5d0b8027",
              "leftValue": "={{ $json.messages.length }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -12860,
        1460
      ],
      "id": "5e0b7c25-7e98-4dba-8e95-ef026c77e6dc",
      "name": "Primeiro mensagem?"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "messages",
        "key": "={{ $('baseInfo').item.json.unique_id }}",
        "keyType": "list",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -13020,
        1460
      ],
      "id": "6a383d12-29c0-458f-ab5a-b9ba1126c709",
      "name": "Get Msgs 1",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "messages",
        "key": "={{ $('baseInfo').item.json.unique_id }}",
        "keyType": "list",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -12460,
        1440
      ],
      "id": "94d98b19-6bb0-4418-be60-21f2366d3aa6",
      "name": "Get Msgs 2",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('baseInfo').item.json.unique_id }}",
        "messageData": "={{ $json.output }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -13180,
        1460
      ],
      "id": "191d08f3-eaec-4e45-b35c-3178be1f851b",
      "name": "Save Msg",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -12640,
        1440
      ],
      "id": "1d3e7c92-8733-48af-90a1-244a11475d70",
      "name": "Aguarda Sec para Processar",
      "webhookId": "90a8e0f8-8bd6-431a-9255-f87374a68a41"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d6e859-8379-4a34-8daf-b34c6a450a09",
              "name": "conversation",
              "value": "={{ $json.messages.join('\\n') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0f8fedea-669d-40dd-a94a-9afba8e3d1d8",
      "name": "Join Msgs",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -12280,
        1440
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('baseInfo').item.json.unique_id }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -13340,
        1460
      ],
      "id": "e143642b-8f01-4445-8e56-7aaaa21efa64",
      "name": "Clean Msgs 1",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('baseInfo').item.json.unique_id }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -12280,
        1240
      ],
      "id": "40ab01c2-1ab1-4340-9598-55aa05bc4356",
      "name": "Clean Msgs  2",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ds3jAJzOq9bxFmE1",
          "mode": "list",
          "cachedResultName": "AI 4 Clinica"
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "id": "f222e561-8196-4a69-ab31-b6890d382528",
      "name": "wk agent actived",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -11560,
        1520
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "8cf29c07-b3c2-4331-bf52-0072050e274c",
      "name": "merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -11920,
        1420
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $('baseInfo').item.json.removeField('output').removeField('messageType') }}",
        "options": {}
      },
      "id": "cdc31549-e641-4821-8d0d-2548b3ed2dc9",
      "name": "chatInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -12100,
        1340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "adc4b240-1340-4273-8ec4-9ed520a5700b",
              "leftValue": "={{ $json.conversation.length }}",
              "rightValue": 1000,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -11760,
        1420
      ],
      "id": "10cda6b7-b187-4783-b8f3-46fd95e95891",
      "name": "limit characters hited?"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a3f06787-56d4-417f-b5e3-a02eac06c46b",
              "name": "msgs",
              "value": "=[\n  \"Opa! Percebi que a mensagem está um pouco longa. Pode resumir para que eu consiga ajudar de forma mais rápida?\",\n  \"Sua mensagem é bem detalhada! Você pode resumir um pouco para facilitar meu entendimento?\",\n  \"Obrigado por compartilhar tantos detalhes! Que tal resumir um pouco para que eu possa te ajudar melhor?\",\n  \"Que legal que você compartilhou tanta informação! Se puder resumir, consigo te ajudar de forma mais prática.\",\n  \"Para garantir que eu te ajude da melhor forma, pode resumir um pouquinho sua mensagem?\",\n  \"Adorei os detalhes! Mas, para facilitar, que tal enviar um resumo da sua dúvida?\",\n  \"Para eu entender rapidinho e te ajudar melhor, pode resumir sua mensagem?\",\n  \"A mensagem está bem completa! Se puder resumir, consigo ser mais ágil na resposta.\",\n  \"Obrigado pela mensagem! Que tal me enviar um resumo para facilitar a análise?\",\n  \"Uau, muita informação boa! Pode resumir um pouco para facilitar minha resposta?\"\n]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -11580,
        1280
      ],
      "id": "f2136f99-1454-46f7-82da-bceb1b157688",
      "name": "Type Response 1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').item.json.evo_api }}/message/sendText/{{ $('baseInfo').item.json.instance }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('baseInfo').item.json.remoteJid }}\",\n  \"text\": \"{{ $json.msgs[Math.floor(Math.random() * $json.msgs.length)] }}\",\n  \"delay\": 250\n,\n  \"linkPreview\": false\n}",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "8061da4e-5edc-42a5-83b7-a21f5c28c3da",
      "name": "Send Message 1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -11420,
        1280
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "T5OqvislWbgDr9Ek",
          "name": "Evolution Api Key"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9aeafed6-db54-46d9-aba7-8d7912006879",
              "name": "mediaType",
              "value": "={{ $('Webhook').item.json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "877321d0-247c-4df5-b7b2-619db36af0db",
              "name": "base64",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -14980,
        1560
      ],
      "id": "db98b1ae-ff71-427b-b0af-39397cde09b1",
      "name": "set config"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    },
    {
      "createdAt": "2024-12-18T13:55:11.434Z",
      "updatedAt": "2024-12-18T13:55:11.434Z",
      "id": "02kkCHve480aFjG4",
      "name": "Clinic"
    },
    {
      "createdAt": "2024-10-31T06:44:33.847Z",
      "updatedAt": "2024-10-31T06:44:33.847Z",
      "id": "6vgbvfx4GT5juXVA",
      "name": "Component"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-04-07T03:34:25.895Z",
  "versionId": "df223259-a2ec-4505-aa94-d2032d2604ea"
}